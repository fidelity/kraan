apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-hook-job"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    helm.sh/hook: pre-install,pre-upgrade
    # The delete policy determines when to delete the hook job:
    #   before-hook-creation: delete before creating this hook again (default)
    #   hook-succeeded: delete immediately if the job succeeds (exit 0)
    #   hook-failed: delete immediately if the job fails (exit non-zero)
    # helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: pre-upgrade-job
        image: "alpine:3"
        command: [ "/bin/sh" ]
        args: [ "-c", "sleep {{ default 0 .Values.delaySeconds }}; {{ default "true" .Values.succeed }}" ]
        # - migrate up
